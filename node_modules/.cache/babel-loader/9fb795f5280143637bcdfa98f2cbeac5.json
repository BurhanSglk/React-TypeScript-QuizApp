{"ast":null,"code":"var _jsxFileName = \"/Users/burhan/Desktop/myProjects/react-typescript-quiz/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //components\n\nimport QuestionsCard from './components/QuestionsCard'; //types\n\nimport { Difficulty } from './API';\nimport { fetchQuizQuestions } from './API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(number);\n  const [gameOver, setGameOver] = useState(true);\n  const TOTAL_QUESTİONS = 10;\n\n  const startQuiz = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTİONS, Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = e => {};\n\n  const nextQuestion = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }, this), gameOver || userAnswers.length === TOTAL_QUESTİONS ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start\",\n      onClick: startQuiz,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this) : null, !gameOver ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score\",\n      children: \"Score:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this) : null, loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Questions ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 20\n    }, this), !loading && !gameOver && /*#__PURE__*/_jsxDEV(QuestionsCard, {\n      questionsNr: number + 1,\n      totalQuestions: TOTAL_QUESTİONS,\n      questions: questions[number].question,\n      answers: questions[number].answer,\n      userAnswers: userAnswers ? userAnswers[number] : undefined,\n      callback: checkAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 8\n    }, this), !gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTİONS - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next\",\n      onClick: nextQuestion,\n      children: \" Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ePWpa2h+qGOdWI2nmDSURREk8Qw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","QuestionsCard","Difficulty","fetchQuizQuestions","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","TOTAL_QUESTİONS","startQuiz","newQuestions","EASY","checkAnswer","e","nextQuestion","length","question","answer","undefined"],"sources":["/Users/burhan/Desktop/myProjects/react-typescript-quiz/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\n\n//components\nimport QuestionsCard from './components/QuestionsCard';\n\n//types\nimport { Difficulty , QuestionsState } from './API';\n\nimport {fetchQuizQuestions} from './API'\ntype AnswerObject = {\n  questions:string,\n  answer:string,\n  correct:boolean,\n  correctAnswer:string,\n}\n\nfunction App() {\n  const [loading,setLoading] = useState(false);\n  const [questions,setQuestions] = useState<QuestionsState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers,setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score , setScore] = useState(number);\n  const [gameOver , setGameOver] = useState(true);\n  const TOTAL_QUESTİONS = 10;\n\n  \n\n  const startQuiz = async () => {\n    setLoading(true);\n    setGameOver(false);\n\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTİONS,Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false)\n  }  \n  const  checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n\n  }\n  const nextQuestion = () => {\n      \n  }\n\n  return (\n    <div className=\"App\">\n     <h1>React Quiz</h1>\n     {\n       gameOver || userAnswers.length === TOTAL_QUESTİONS \n       ?\n       (\n          <button className='start' onClick={startQuiz}>Start</button>\n       )\n       :null\n     }\n     {\n       !gameOver ?  <p className='score'>Score:</p> : null\n     }\n     {\n       loading &&  <p>Loading Questions ...</p> \n     }\n     {\n       !loading && !gameOver && (\n       <QuestionsCard\n          questionsNr={number + 1}\n          totalQuestions={TOTAL_QUESTİONS}\n          questions={questions[number].question}\n          answers={questions[number].answer}\n          userAnswers={userAnswers ?  userAnswers[number] : undefined}\n          callback={checkAnswer}\n     />)\n     }\n     {\n       !gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTİONS - 1 ?\n       (\n         <button className='next' onClick={nextQuestion}> Next Question</button>\n       )\n       : null\n     }\n     \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,4BAA1B,C,CAEA;;AACA,SAASC,UAAT,QAA4C,OAA5C;AAEA,SAAQC,kBAAR,QAAiC,OAAjC;;;AAQA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAASC,UAAT,IAAuBN,QAAQ,CAAC,KAAD,CAArC;EACA,MAAM,CAACO,SAAD,EAAWC,YAAX,IAA2BR,QAAQ,CAAmB,EAAnB,CAAzC;EACA,MAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,CAAD,CAApC;EACA,MAAM,CAACW,WAAD,EAAaC,cAAb,IAA+BZ,QAAQ,CAAiB,EAAjB,CAA7C;EACA,MAAM,CAACa,KAAD,EAASC,QAAT,IAAqBd,QAAQ,CAACS,MAAD,CAAnC;EACA,MAAM,CAACM,QAAD,EAAYC,WAAZ,IAA2BhB,QAAQ,CAAC,IAAD,CAAzC;EACA,MAAMiB,eAAe,GAAG,EAAxB;;EAIA,MAAMC,SAAS,GAAG,YAAY;IAC5BZ,UAAU,CAAC,IAAD,CAAV;IACAU,WAAW,CAAC,KAAD,CAAX;IAEA,MAAMG,YAAY,GAAG,MAAMhB,kBAAkB,CAACc,eAAD,EAAiBf,UAAU,CAACkB,IAA5B,CAA7C;IACAZ,YAAY,CAACW,YAAD,CAAZ;IACAL,QAAQ,CAAC,CAAD,CAAR;IACAF,cAAc,CAAC,EAAD,CAAd;IACAF,SAAS,CAAC,CAAD,CAAT;IACAJ,UAAU,CAAC,KAAD,CAAV;EACD,CAVD;;EAWA,MAAOe,WAAW,GAAIC,CAAD,IAA4C,CAEhE,CAFD;;EAGA,MAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,EAGGR,QAAQ,IAAIJ,WAAW,CAACa,MAAZ,KAAuBP,eAAnC,gBAGG;MAAQ,SAAS,EAAC,OAAlB;MAA0B,OAAO,EAAEC,SAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHH,GAKC,IARJ,EAWG,CAACH,QAAD,gBAAa;MAAG,SAAS,EAAC,OAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAb,GAA+C,IAXlD,EAcGV,OAAO,iBAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdf,EAiBG,CAACA,OAAD,IAAY,CAACU,QAAb,iBACA,QAAC,aAAD;MACG,WAAW,EAAEN,MAAM,GAAG,CADzB;MAEG,cAAc,EAAEQ,eAFnB;MAGG,SAAS,EAAEV,SAAS,CAACE,MAAD,CAAT,CAAkBgB,QAHhC;MAIG,OAAO,EAAElB,SAAS,CAACE,MAAD,CAAT,CAAkBiB,MAJ9B;MAKG,WAAW,EAAEf,WAAW,GAAIA,WAAW,CAACF,MAAD,CAAf,GAA0BkB,SALrD;MAMG,QAAQ,EAAEN;IANb;MAAA;MAAA;MAAA;IAAA,QAlBH,EA4BG,CAACN,QAAD,IAAa,CAACV,OAAd,IAAyBM,WAAW,CAACa,MAAZ,KAAuBf,MAAM,GAAG,CAAzD,IAA8DA,MAAM,KAAKQ,eAAe,GAAG,CAA3F,gBAEE;MAAQ,SAAS,EAAC,MAAlB;MAAyB,OAAO,EAAEM,YAAlC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,GAIE,IAhCL;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsCD;;GAnEQnB,G;;KAAAA,G;AAqET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}